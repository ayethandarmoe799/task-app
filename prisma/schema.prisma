// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  image     String?
  tasks     Task[]
  categories Category[]
  tags      Tag[]
  taskTemplates TaskTemplate[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String   @id @default(uuid())
  name        String
  color       String   @default("#3B82F6") // Default blue color
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  tasks       Task[]
  taskTemplates TaskTemplate[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([name, userId])
}

model Tag {
  id          String   @id @default(uuid())
  name        String
  color       String   @default("#6B7280") // Default gray color
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  tasks       Task[]
  taskTemplates TaskTemplate[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([name, userId])
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  status      String   @default("pending")
  priority    String   @default("medium") // low, medium, high
  dueDate     DateTime?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId  String?
  tags        Tag[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TaskTemplate {
  id          String   @id @default(uuid())
  title       String
  description String?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId  String?
  tags        Tag[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
